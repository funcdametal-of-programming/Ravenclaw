#include <iostream>
#include<cmath>
#include<cstring>
#include<algorithm>
using namespace std;
int main()
{
    int num,num16;
    cout<<"number ";
    cin>>num;
    int dec = 0, i = 0, rem,Num=num;
    bool test=true;// to check the input is valid

    while(Num)
        // process to check the input is appropriate for base 2
        {
            int y;
            y=Num%10;
            if(y<2)
                {
                    test&=true;
                }
            else
                {
                    test&=false;
                }
            Num/=10;
        }
    if(test)//process continue if valid base
        {
            while (num!=0)
            //convert to base 10
                {
                    rem = num % 10;
                    num/= 10;
                    dec += rem * pow(2, i);
                    ++i;
                }
            {
                int base2;
                string converted,z;
a:
                cout<<"to which do you want to change "<<endl;
                cout<<"1) decimal\n2) octal\n3)hexa decimal\n";
                cin>>base2;
                switch(base2)
                    {

                    case 1:
                    {
                        bool tester=dec<0;// to deal with negative numbers
                        if(dec==0)
                            {
                                cout<<"decimal representation is "<<dec;
                            }
                        else //
                            {
                                while(dec!=0)
                                    {
                                        dec=abs(dec);
                                        int y;
                                        y=dec%10;
                                        z=to_string(y);
                                        converted.append(z);
                                        dec/=10;
                                    }
                                reverse(converted.begin(),converted.end());
                                cout<<"decimal representation is ";
                            }


                        if(tester)
                            cout<<"-";
                        for(auto x:converted)
                            //print all elements of string
                            {
                                cout<<x;
                            }

                    }

                    break;
                    case 2:
                    {
                        bool tester=dec<0;
                        if(dec==0)
                            {
                                cout<<"Octal representation is "<<dec;
                            }
                        else
                            {
                                while(dec!=0)
                                    {
                                        dec=abs(dec);
                                        int y;
                                        y=dec%8;
                                        z=to_string(y);
                                        converted.append(z);
                                        dec/=8;
                                    }
                                reverse(converted.begin(),converted.end());
                                cout<<"octal representation is ";
                            }


                        if(tester)
                            cout<<"-";
                        for(auto x:converted)
                            {
                                cout<<x;
                            }

                    }

                    break;
                    case 3:
                    {
                        bool tester=dec<0;
                        if(dec==0)
                            {
                                cout<<"hexadecimal representation is "<<dec;
                            }
                        else
                            {
                                while(dec!=0)
                                    {
                                        dec=abs(dec);
                                        int y;
                                        y=dec%16;
                                        switch(y)
                                            {
                                            case 10:
                                                converted.append("A");
                                                break;
                                            case 11:
                                                converted.append("B");
                                                break;
                                            case 12:
                                                converted.append("C");
                                                break;
                                            case 13:
                                                converted.append("D");
                                                break;
                                            case 14:
                                                converted.append("E");
                                                break;
                                            case 15:
                                                converted.append("F");
                                                break;
                                            default:
                                                z=to_string(y);
                                                converted.append(z);
                                                break;
                                            }
                                        dec/=16;
                                    }
                                reverse(converted.begin(),converted.end());
                                cout<<"hexadecimal representation is ";
                            }


                        if(tester)
                            cout<<"-";
                        for(auto x:converted)
                            {
                                cout<<x;
                            }

                    }
                    break;
                    default://give chance to choose appropriate base
                        cout<<"invalid input"<<endl;
                        goto a;
                    }


            }

        }
        else{
                //improper input
            cout<<"invalid input"<<endl;
            main();
        }
}


